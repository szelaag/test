const qs=e=>document.querySelector(e);const tBody=()=>qs('#projects-table tbody');let editingId=null;async function checkAuth(){try{const e=await fetch('/api/admin/me',{method:'GET',credentials:'include'}),t=e.ok;qs('#login-card').style.display=t?'none':'block',qs('#projects-card').style.display=t?'block':'none',qs('#edit-card').style.display='none',t&&loadList()}catch{qs('#login-card').style.display='block'}}async function login(){const e=qs('#username')?.value.trim()||'',t=qs('#password')?.value||'';qs('#login-status').textContent='Logowanie...';const a=await fetch('/api/admin/login',{method:'POST',credentials:'include',headers:{'Content-Type':'application/json'},body:JSON.stringify({username:e,password:t})});qs('#login-status').textContent=a.ok?'Zalogowano.':'Błędny login lub hasło.',a.ok&&checkAuth()}async function logout(){await fetch('/api/admin/logout',{method:'POST',credentials:'include'}),location.reload()}async function loadList(){const e=await fetch('/api/projects',{credentials:'include'}),t=await e.json(),a=tBody();if(!a)return;a.innerHTML='',(t.projects||[]).sort(((e,t)=>(e.order_num??0)-(t.order_num??0))).forEach((e=>{const t=document.createElement('tr');t.innerHTML=`
      <td>${e.id}</td>
      <td>${e.title||''}</td>
      <td><div class="muted" style="max-width:260px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap">${e.imageUrl||''}</div></td>
      <td><div class="muted" style="max-width:260px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap">${e.linkUrl||''}</div></td>
      <td>${e.order_num??0}</td>
      <td>
        <button data-id="${e.id}" class="editBtn secondary">Edytuj</button>
        <button data-id="${e.id}" class="delBtn danger">Usuń</button>
      </td>`,a.appendChild(t)})),a.onclick=async e=>{const t=e.target.closest('button');if(!t)return;const a=t.dataset.id;if(t.classList.contains('editBtn')){const e=await fetch('/api/projects/'+a,{credentials:'include'}),t=await e.json();openEditor(t)}t.classList.contains('delBtn')&&confirm('Na pewno usunąć projekt #'+a+'?')&&await fetch('/api/projects/'+a,{method:'DELETE',credentials:'include'}).then((e=>{e.ok?loadList():alert('Błąd usuwania: '+e.status)}))}}function openEditor(e){editingId=e?.id??null,qs('#edit-title').textContent=editingId?'Edytuj projekt':'Nowy projekt',qs('#p-title').value=e?.title||'',qs('#p-link').value=e?.linkUrl||'',qs('#p-image').value=e?.imageUrl||'',qs('#p-desc').value=e?.description||'',qs('#p-order').value=e?.order_num??0,qs('#edit-card').style.display='block'}async function save(){const e={title:qs('#p-title').value.trim(),linkUrl:qs('#p-link').value.trim(),imageUrl:qs('#p-image').value.trim(),description:qs('#p-desc').value.trim(),order_num:parseInt(qs('#p-order').value||'0',10)},t=editingId?`/api/projects/${editingId}`:'/api/projects',a=editingId?'PUT':'POST',n=await fetch(t,{method:a,credentials:'include',headers:{'Content-Type':'application/json'},body:JSON.stringify(e)});if(n.ok)qs('#edit-card').style.display='none',loadList();else{let e='Błąd zapisu: '+n.status;try{e+=' — '+await n.text()}catch{}alert(e)}}function init(){qs('#loginBtn')?.addEventListener('click',login),qs('#logoutBtn')?.addEventListener('click',logout),qs('#reloadBtn')?.addEventListener('click',loadList),qs('#newBtn')?.addEventListener('click',(()=>openEditor(null))),qs('#saveBtn')?.addEventListener('click',save),qs('#cancelBtn')?.addEventListener('click',(()=>{qs('#edit-card').style.display='none'})),checkAuth()}init();